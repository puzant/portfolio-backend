<!DOCTYPE html>
<html lang="en">
<%- include('../partials/_head') %>
<body>
  <%- include('../partials/_navigation') %>

  <div class="p-4">
    <div id="alertContainer"></div>

    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/cms">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add Project</li>
      </ol>
    </nav>

    <%- include('./_projectsForm', { 
      formAction: '/v1/projects/add',
      formId: 'addForm',
      project: null,
    }) %>
  
  </div>

  <script src="/js/alert.js"></script>
  <script src="/js/validator.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      document.getElementById('loadingIndicator').style.display = 'none'

      const form = document.getElementById('addForm');
      const fileInput = document.getElementById('fileInput')
      const projectPreviewContainer = document.getElementById('projectPreviewContainer')
      const projectPreview = document.getElementById('projectPreview')

      projectPreviewContainer.style.display = 'none'
      fileInput.addEventListener('change', function(e) {
        const [file] = fileInput.files
        if (file) {
          projectPreviewContainer.style.display = 'block'
          projectPreview.src = URL.createObjectURL(file)
        }
      })

      form.addEventListener('submit', async function(event) {
        event.preventDefault()

        let errorsMap = {}
        let fieldsMap = [
          { path: 'name' },
          { path: 'link' },
          { path: 'description' },
          { path: 'file' },
        ]
        const formData = new FormData(form)
        document.getElementById('loadingIndicator').style.display = 'block'

        try {
          const response = await axios({
            url: this.action,
            method: this.method,
            data: formData,
          })

          if (response.data.success) {
            showAlert('success', response.data.message)
            errorsMap = []
          }
        } catch (err) {
          errorsMap = err.response.data.errors
          validator(errorsMap, fieldsMap)
          showAlert('danger', err.response.data.message)
        } finally {
          document.getElementById('loadingIndicator').style.display = 'none'
        }
      })
    })
  </script>

</body>
</html>
