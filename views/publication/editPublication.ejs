<!DOCTYPE html>
<html lang="en">
<%- include('../partials/_head') %>
<body>
  <div class="p-4">
    <div id="alertContainer"></div>

    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/cms">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Edit Publication</li>
      </ol>
    </nav>

    <h3><%= publication.title %></h3>

    <%- include('../partials/_publicationsForm', { 
      formAction: `/publications/api/edit/${publication._id}`, 
      formId: 'editForm',
      publication 
    }) %>

  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('editForm');
  
      form.addEventListener('submit', function(e) {
        e.preventDefault()
        
        let isValid = true
        const formData = new URLSearchParams()
        
        const title = document.getElementById('title').value.trim()
        const publishedDate = document.getElementById('publishedDate').value.trim()
        const link = document.getElementById('link').value.trim()
        const duration = document.getElementById('duration').value.trim()
        const preview = document.getElementById('preview').value.trim()
        const parsedDate = Date.parse(publishedDate)
        
        if (!title) {
          document.getElementById('titleError').textContent = 'Title is required'
          isValid = false
        }
        
        if (isNaN(parsedDate)) {
          console.log('inside')
          document.getElementById('publishedDateError').textContent = 'Published Date is required'
          isValid = false
        }

        if (!link) {
          document.getElementById('linkError').textContent = 'Link is required'
          isValid = false
        }

        if (!duration) {
          document.getElementById('durationError').textContent = 'Duration is required'
          isValid = false
        }

        if (!preview) {
          document.getElementById('previewError').textContent = 'Preview is required'
          isValid = false
        }

        Array.from(form.elements).forEach(element => {
          if (element.name && element.value) {
            formData.append(element.name, element.value)
          }
        })

        if (isValid) {
          fetch(this.action, {
            method: this.method,
            body: formData,
          })
          .then(response => response.json())
          .then(data => {
            if (data.error) {
              showAlert('danger', data.error)
            } else {
              showAlert('success', 'Publication updated successfully!')
            }
          }).catch(err => {
            showAlert('danger', 'An unexpected error occurred.')
            console.error(err)
          })
        }
      })
    })

    function showAlert(type, message) {
      const alert = document.createElement('div')
      alert.className = `alert alert-${type} alert-dismissible fade show`
      alert.role = 'alert'
      alert.innerHTML = `
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      `
      alertContainer.appendChild(alert)

      setTimeout(() => {
        alert.classList.remove('show')
        alert.addEventListener('transitionend', () => alert.remove())
      }, 5000)
    }

  </script>
</body>
</html>